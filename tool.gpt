Name: Knowledge
Description: Retrieve information from files uploaded by the user.
Type: context
Share Tools: Knowledge Retrieval
Share Context: github.com/gptscript-ai/context/workspace
Share Context: Knowledge Retrieval Context with *

#!sys.echo

You have access to a RAG tool named "Knowledge Retrieval".
It will work with files from the workspace it previously ingested on behalf of the user.
Use it to answer questions from the user.
Give citations or source references only if asked for it and that doesn't conflict with any other instructions you've received in your system prompt.
ALWAYS prefer this tool over the read tool.
If the answers that the knowledge tool returns seem irrelevant, use another tool, but not the read tool.
Only consider this tool if the knowledge from your context doesn't already hold the answer.

---
Name: Knowledge Retrieval
Description: Retrieve information from files uploaded by the user.
Context: github.com/gptscript-ai/context/workspace
Credential: github.com/gptscript-ai/gateway-creds as github.com/gptscript-ai/gateway
Param: query: The query to search for in the knowledge base. It will be used for semantic similarity search, so enhance it accordingly to yield good results.
Param: debug: (OPTIONAL) Set to "true" to enable debug mode - only use if you are explicitly asked to do so.

#!knowledge retrieve --dataset ${GPTSCRIPT_THREAD_ID} "${GPTSCRIPT_INPUT}"

---
Name: Knowledge Retrieval Context
Description: Add knowledge retrieved from uploaded files to the context.
Context: github.com/gptscript-ai/context/workspace
Credential: github.com/gptscript-ai/gateway-creds as github.com/gptscript-ai/gateway
Type: context
Input Filter: QueryRelevancy
Output Filter: KnowledgeInstructions

#!knowledge retrieve --flows-file=blueprint:context --dataset ${GPTSCRIPT_THREAD_ID} "${GPTSCRIPT_INPUT}"

---
Name: QueryRelevancy
Param: input: the message
Context: github.com/iwilltry42/gptscript-context/last-queries@fe1ca1b

The user has put in the following message: "${INPUT}".
Your task is to ensure that the input is good enough to be used as a query for the knowledge tool, i.e. good for a semantic similarity search.
The input is good enough, if it contains keywords, names, entities, etc. that are likely to be found in the knowledge base.
If you think the input is a follow-up question or in anyway referring to an earlier message, then adjust it based on the chat history enclosed in the following <HISTORY></HISTORY> tags.
<HISTORY>
${GPTSCRIPT_CONTEXT}
</HISTORY>
If the chat history is empty, but the input is not good for a semantic search (e.g. does not contain any keywords, entities, etc.), return a single - with no quotes or highlighting or anything else.
If the chat history is empty, but the input is good enough for a semantic search, return the input as is.
If the chat history is irrelevant (i.e. there is no connection the current input) and you're certain that the input won't make for a good query, return a single - with no quotes or highlighting or anything else.
Only reply with the final query and nothing else.
Here's an example:
Input: "Who's the employer?"
History: "<USER_MESSAGES>[User Message #1] How much does John Doe earn?</USER_MESSAGES>"
Output: "Who's the employer of John Doe?"
Reasoning: The input looks like a follow-up question related to a previous query. The previous query is about the entity John Doe, so the current query is likely asking about the same entity.


---
Name: KnowledgeInstructions
Params: output: the message
Params: continuation: if the the conversation is still in progress
Params: chat: if this is a chat conversation

#!/usr/bin/env python3 ${GPTSCRIPT_TOOL_DIR}/output.py
